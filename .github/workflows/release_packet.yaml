name: Release Workflow

on:
  push:
    tags:
      - 'v.*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Strip version prefix v.x.x => x.x
        id: strip_version
        run: |
          VERSION_STRING=${{ github.ref_name }}
          STRIPPED_VERSION=${VERSION_STRING:2}
          echo "stripped_version=$STRIPPED_VERSION" >> $GITHUB_OUTPUT

      - name: Assign zipped file names
        id: file_names
        run: |
          BOT_FILENAME=SalemBot-${{ steps.strip_version.outputs.stripped_version }}.zip
          API_FILENAME=SalemApi-${{ steps.strip_version.outputs.stripped_version }}.zip
          echo "bot_filename=$BOT_FILENAME" >> $GITHUB_OUTPUT
          echo "api_filename=$API_FILENAME" >> $GITHUB_OUTPUT
          

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Delete specific files and folders
        run: |
          rm -rf api/__blobstorage__
          rm api/.funcignore
          rm api/sample.dat
          rm -rf client/node_modules
          rm -rf client/sampleData
          rm -rf client/test
          rm client/eslint.js

      - name: Zip client folder
        run: | 
          zip -r client.zip client/
          mv client.zip ${{ steps.file_names.outputs.bot_filename }}

      - name: Zip api folder
        run: |
          zip -r api.zip api/
          mv api.zip ${{ steps.file_names.outputs.api_filename }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Client ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.file_names.outputs.bot_filename }}
          asset_name: ${{ steps.file_names.outputs.bot_filename }}
          asset_content_type: application/zip

      - name: Upload API ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.file_names.outputs.api_filename }}
          asset_name: ${{ steps.file_names.outputs.api_filename }}
          asset_content_type: application/zip